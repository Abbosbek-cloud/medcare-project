import {
  Box,
  Button,
  Grid,
  Stack,
  Typography,
  Chip,
  TextField,
} from "@mui/material";
import DoneIcon from "@mui/icons-material/Done";
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { setIllness, toggleSelected } from "store/search.slice";
import { inlless } from "data/illness";
import { CircleTag } from "components/styled";

const Page = () => {
  const router = useRouter();
  const dispatch = useDispatch();
  const { sick, selected } = useSelector((state) => state.search);

  React.useEffect(() => {
    dispatch(setIllness(inlless));
  }, []);

  return (
    <>
      <Head>
        <title>Qidiruvlar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="robots" content="all" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack direction="row" justifyContent="center">
        <Stack
          direction="row"
          justifyContent="start"
          alignItems="center"
          gap={1}
          py={3}
          sx={{ cursor: "pointer" }}
          onClick={() => router.push("/")}
        >
          <Box component="img" loading="lazy" src="/svg.svg" />
          <Typography variant="logoPrint" fontWeight="500" color="success.main">
            MedCare
          </Typography>
        </Stack>
      </Stack>
      <Stack
        sx={{
          height: "calc(100vh - 81px)",
          display: "flex",
          flexDirection: "column",
          justifyContent: "space-between",
        }}
      >
        <Stack>
          <Typography textAlign="center" variant="h4">
            Kasallik turini aniqlash uchun <br /> kasallik alomatlarini tanlang
          </Typography>
          <Grid container justifyContent="center" marginTop={2}>
            <Grid item xs={11} md={4}>
              <TextField
                fullWidth
                size="small"
                variant="standard"
                sx={{ textAlign: "center" }}
                placeholder="Qidiruv"
                color="success"
                inputProps={{
                  style: {
                    textAlign: "center",
                  },
                }}
              />
            </Grid>
            <Grid item xs={11} md={9} mt={6}>
              <Stack
                p={3}
                direction="row"
                flexWrap="wrap"
                gap={2}
                justifyContent="center"
              >
                {sick.map((item) => {
                  let isExist = selected.includes(item.id);
                  return (
                    <Chip
                      key={item.id}
                      label={item.name}
                      onClick={() => dispatch(toggleSelected(item.id))}
                      onDelete={() => {}}
                      deleteIcon={
                        isExist ? (
                          <DoneIcon className="delete-chip-icon" />
                        ) : (
                          <div />
                        )
                      }
                      variant={isExist ? "outlined" : ""}
                      size="small"
                      sx={{
                        padding: "20px 24px",
                        backgroundColor: isExist
                          ? "#fff"
                          : "rgba(69, 69, 69, 0.05)",
                        borderColor: "#17C37B",
                        borderRadius: "50px",
                        fontSize: "18px",
                        fontWeight: "400",
                        color: isExist ? "#17C37B" : "#000",
                      }}
                    />
                  );
                })}
              </Stack>
            </Grid>
          </Grid>
        </Stack>
        <Stack p={4}>
          <Stack borderTop="1px solid hsla(0, 0%, 0%, .1)" pt={4}>
            <Button
              sx={{ borderRadius: "13px" }}
              variant="contained"
              color="success"
            >
              Keyingisi
            </Button>
          </Stack>
        </Stack>
      </Stack>
    </>
  );
};

export default Page;
